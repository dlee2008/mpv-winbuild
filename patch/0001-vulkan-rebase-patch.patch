From c18e3e1d68e5be5d27b6e16499bd1776da297be7 Mon Sep 17 00:00:00 2001
From: zhongfly <11155705+zhongfly@users.noreply.github.com>
Date: Tue, 24 Sep 2024 07:55:18 +0800
Subject: [PATCH] vulkan: rebase patch

---
 ...1-cross-compile-static-linking-hacks.patch | 26 +++++++++----------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/packages/vulkan-0001-cross-compile-static-linking-hacks.patch b/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
index ea32497ed..e8bf7008e 100644
--- a/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
+++ b/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
@@ -1,4 +1,4 @@
-From dd2fb568b5750261692ed0c47504dac046d5b291 Mon Sep 17 00:00:00 2001
+From 674585829a6d419caee55ad2c821104847ed9953 Mon Sep 17 00:00:00 2001
 From: shinchiro <shinchiro@users.noreply.github.com>
 Date: Wed, 29 Nov 2023 17:38:59 +0800
 Subject: [PATCH] loader: cross-compile & static linking hacks
@@ -14,7 +14,7 @@ Subject: [PATCH] loader: cross-compile & static linking hacks
  create mode 100644 loader/vulkan_own.pc.in
 
 diff --git a/loader/CMakeLists.txt b/loader/CMakeLists.txt
-index 5a4caec28..da141adbf 100644
+index 6296ebff1..7408a63b8 100644
 --- a/loader/CMakeLists.txt
 +++ b/loader/CMakeLists.txt
 @@ -22,8 +22,9 @@ include(CheckIncludeFile)
@@ -28,7 +28,7 @@ index 5a4caec28..da141adbf 100644
  
      if(ENABLE_WIN10_ONECORE)
          # Note: When linking your app or driver to OneCore.lib, be sure to remove any links to non-umbrella libs (such as
-@@ -311,7 +312,7 @@ if(UNKNOWN_FUNCTIONS_SUPPORTED)
+@@ -372,7 +373,7 @@ if(UNKNOWN_FUNCTIONS_SUPPORTED)
      list(APPEND NORMAL_LOADER_SRCS ${OPT_LOADER_SRCS})
  endif()
  
@@ -37,7 +37,7 @@ index 5a4caec28..da141adbf 100644
      # If BUILD_DLL_VERSIONINFO was set, use the loader.rc in the build dir, otherwise use the checked in file
      set(RC_FILE_LOCATION ${CMAKE_CURRENT_SOURCE_DIR}/loader.rc)
      if (NOT "$CACHE{BUILD_DLL_VERSIONINFO}" STREQUAL "")
-@@ -348,21 +349,8 @@ if(WIN32)
+@@ -412,21 +413,8 @@ if(WIN32)
      endif()
  
  else()
@@ -61,7 +61,7 @@ index 5a4caec28..da141adbf 100644
      target_sources(vulkan PRIVATE ${NORMAL_LOADER_SRCS})
  
      set_target_properties(vulkan PROPERTIES
-@@ -462,7 +450,7 @@ if (UNKNOWN_FUNCTIONS_SUPPORTED)
+@@ -526,7 +514,7 @@ if (UNKNOWN_FUNCTIONS_SUPPORTED)
      add_dependencies(vulkan loader_asm_gen_files)
  endif()
  
@@ -71,7 +71,7 @@ index 5a4caec28..da141adbf 100644
      message(NOTICE "Apple STATIC lib: it will be built but not installed, and vulkan.pc and VulkanLoaderConfig.cmake won't be generated!")
      return()
 diff --git a/loader/loader.h b/loader/loader.h
-index 2bce18189..77def28bc 100644
+index fcd95dd10..42af58b9b 100644
 --- a/loader/loader.h
 +++ b/loader/loader.h
 @@ -33,7 +33,9 @@
@@ -101,10 +101,10 @@ index 0dc4227da..e7fcea06f 100644
  // All set through CMake
  #define VER_FILE_VERSION ${LOADER_VER_FILE_VERSION}
 diff --git a/loader/loader_windows.c b/loader/loader_windows.c
-index 43ecf6672..37bc684cf 100644
+index 76c49d5be..4ea239dc1 100644
 --- a/loader/loader_windows.c
 +++ b/loader/loader_windows.c
-@@ -97,6 +97,7 @@ void windows_initialization(void) {
+@@ -95,6 +95,7 @@ void windows_initialization(void) {
  #endif
  }
  
@@ -112,7 +112,7 @@ index 43ecf6672..37bc684cf 100644
  BOOL WINAPI DllMain(HINSTANCE hinst, DWORD reason, LPVOID reserved) {
      (void)hinst;
      switch (reason) {
-@@ -114,6 +115,7 @@ BOOL WINAPI DllMain(HINSTANCE hinst, DWORD reason, LPVOID reserved) {
+@@ -116,6 +117,7 @@ BOOL WINAPI DllMain(HINSTANCE hinst, DWORD reason, LPVOID reserved) {
      }
      return TRUE;
  }
@@ -121,7 +121,7 @@ index 43ecf6672..37bc684cf 100644
  bool windows_add_json_entry(const struct loader_instance *inst,
                              char **reg_data,    // list of JSON files
 diff --git a/loader/vk_loader_platform.h b/loader/vk_loader_platform.h
-index a70ba71a8..4e42ba05b 100644
+index 58f734957..22e7271e5 100644
 --- a/loader/vk_loader_platform.h
 +++ b/loader/vk_loader_platform.h
 @@ -71,15 +71,12 @@
@@ -142,9 +142,9 @@ index a70ba71a8..4e42ba05b 100644
  #define LOADER_EXPORT
  #elif defined(__GNUC__) && __GNUC__ >= 4
  #define LOADER_EXPORT __attribute__((visibility("default")))
-@@ -233,7 +230,7 @@ static inline bool loader_platform_is_path(const char *path) { return strchr(pat
- // resources allocated by anything allocated by once init. This isn't a problem for static libraries, but it is for dynamic
- // ones. When building a DLL, we use DllMain() instead to allow properly cleaning up resources.
+@@ -241,7 +238,7 @@ static inline bool loader_platform_is_path(const char *path) { return strchr(pat
+ // API call made, using InitOnceExecuteOnce, except for initialization primitives which must be done in DllMain. This is because
+ // there is no way to clean up the resources allocated by anything allocated by once init.
  
 -#if defined(APPLE_STATIC_LOADER)
 +#if defined(BUILD_STATIC_LOADER)
-- 
2.46.0

